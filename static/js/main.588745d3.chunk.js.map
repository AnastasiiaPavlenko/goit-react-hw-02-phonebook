{"version":3,"sources":["ContactForm/ContactForm.jsx","ContactList/ContactList.jsx","Filter/Filter.jsx","App.js","index.js"],"names":["ContactForm","state","name","number","reset","setState","handleChange","bind","event","target","this","value","id","className","htmlFor","type","onChange","form","onClick","props","onSubmit","Component","uuidv1","require","ContactList","filtered","length","map","contact","key","contacts","Filter","handleFilter","App","query","filteredContacts","filter","e","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.588745d3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import styles from './Buttons.module.css';\n\nclass ContactForm extends Component {\n    static propTypes = {\n        onSubmit: PropTypes.func.isRequired,\n    }\n\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handleChange(event) {\n        if (event.target.name === \"name\") {\n            this.setState({ name: event.target.value });\n        } else if (event.target.name === \"amount\") {\n            this.setState({ number: event.target.value });\n        };\n    }\n\n    reset = () => {\n        this.setState({ name: '', number: '' });\n    }\n\n    handleChange = this.handleChange.bind(this);\n\n    render() {\n        const { name, number } = this.state;\n        return <form id=\"form\" className=\"form\">\n            <label htmlFor=\"name\">Name</label>\n            <input id=\"name\" type=\"text\" name=\"name\" value={this.state.name} className=\"input\" onChange={this.handleChange} />\n            <label htmlFor=\"number\">Number</label>\n            <input id=\"number\" type=\"number\" name=\"amount\" value={this.state.number} className=\"input\" onChange={this.handleChange} />\n            <button form=\"form\" type=\"button\" className=\"button\" onClick={() => this.props.onSubmit(name, number, this.reset)}>Add contact</button>\n        </form>\n    };\n};\n\nexport default ContactForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import styles from './Buttons.module.css';\nconst uuidv1 = require('uuid/v1');\n\nclass ContactList extends Component {\n    static propTypes = {\n        contacts: PropTypes.array.isRequired,\n        filtered: PropTypes.array.isRequired,\n    }\n\n    render() {\n\n        return <ul className=\"contactList\" >\n            {this.props.filtered.length > 0 ? (this.props.filtered.map(contact => (\n                <li className=\"list-item\" key={uuidv1()}>\n                    {contact.name} : {contact.number}\n                </li>\n            ))) : (this.props.contacts.map(contact => (\n                <li className=\"list-item\" key={uuidv1()}>\n                    {contact.name} : {contact.number}\n                </li>\n            )))\n            }\n            {/* {this.props.contacts.map(contact => (\n                <li className=\"list-item\" key={uuidv1()}>\n                    {contact.name} : {contact.number}\n                </li>\n            ))} */}\n        </ul>\n    }\n};\n\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import styles from './Filter.module.css';\n\nclass Filter extends Component {\n    static propTypes = {\n        handleFilter: PropTypes.func.isRequired,\n    }\n\n    state = {\n        value: '',\n    };\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n        this.props.handleFilter(this.state.value);\n    }\n\n    reset = () => {\n        this.setState({ name: '' });\n    }\n\n    handleChange = this.handleChange.bind(this);\n\n    render() {\n        return <>\n            <label htmlFor=\"filter\">Find contacts by name</label>\n            <input id=\"filter\" type=\"text\" name=\"filter\" value={this.state.value} className=\"input\" onChange={this.handleChange} />\n        </>\n    };\n};\n\nexport default Filter;","import React, { Component } from 'react';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nconst uuidv1 = require('uuid/v1');\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { name: 'Rosie Simpson', number: '4591256', id: 'id-1' },\n      { name: 'Hermione Kline', number: '4438912', id: 'id-2' },\n      { name: 'Eden Clements', number: '6451779', id: 'id-3' },\n      { name: 'Annie Copeland', number: '2279126', id: 'id-4' },\n    ],\n    filtered: [],\n  }\n\n  onSubmit = (name, number, reset) => {\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, {\n        name: name,\n        number: number,\n        id: uuidv1()\n      }]\n    }));\n    reset();\n  };\n\n  handleFilter = (query) => {\n    const filteredContacts = this.state.contacts.filter(\n      e =>\n        e.name.toLowerCase().includes(query.toLowerCase())\n    );\n\n    //   this.setState((prevState) => ({\n    //     filtered: [prevState, ...filteredContacts],\n    //   }));\n    //   console.log(\"filtered\", this.state.filtered);\n    // };\n\n    this.setState(() => ({\n      filtered: [...filteredContacts],\n    }));\n  };\n\n  render() {\n    const { contacts, filtered } = this.state;\n    return <>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={this.onSubmit} />\n      <h2>Contacts</h2>\n      <Filter handleFilter={this.handleFilter} />\n      <ContactList contacts={contacts} filtered={filtered} />\n    </>\n  }\n};\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}